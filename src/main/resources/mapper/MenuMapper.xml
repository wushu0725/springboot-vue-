<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.MenuDao">
    <resultMap id="BaseResultMap" type="org.spring.springboot.domain.Menu">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="component" property="component" javaType="java.lang.Object"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="iconCls" property="iconCls" jdbcType="VARCHAR"/>
        <result column="keepAlive" property="keepAlive" jdbcType="BIT"/>
        <result column="parentId" property="parentId" jdbcType="INTEGER"/>
        <association property="meta" javaType="org.spring.springboot.domain.MenuMeta">
            <result column="keepAlive" property="keepAlive"/>
            <result column="requireAuth" property="requireAuth"/>
        </association>
        <collection property="roles" ofType="org.spring.springboot.domain.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
        <collection property="children" ofType="org.spring.springboot.domain.Menu">
            <id column="id2" property="id"/>
            <result column="path2" property="path" jdbcType="VARCHAR"/>
            <result column="component2" property="component" jdbcType="VARCHAR"/>
            <result column="name2" property="name" jdbcType="VARCHAR"/>
            <result column="iconCls2" property="iconCls" jdbcType="VARCHAR"/>
            <association property="meta" javaType="org.spring.springboot.domain.MenuMeta">
                <result column="keepAlive2" property="keepAlive"/>
                <result column="requireAuth2" property="requireAuth"/>
            </association>
            <collection property="children" ofType="org.spring.springboot.domain.Menu">
                <id column="id3" property="id"/>
                <result column="name3" property="name" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getAllMenu" resultMap="BaseResultMap">
        select m.*,r.`id` as rid,r.`name` as rname,r.`nameZh` as rnamezh from menu m left join menu_role mr on m.`id`=mr.`mid` left join role r on mr.`rid`=r.`id` WHERE m.`enabled`=true order by m.`id` desc
    </select>
    <select id="getMenusByUserId" parameterType="Long" resultMap="BaseResultMap">
            SELECT
            m1.id,
            m1.path,
            m1.component,
            m1.iconCls,
            m1.name,
            m1.requireAuth,
            m2.component AS component2,
            m2.iconCls AS iconCls2,
            m2.keepAlive AS keepAlive2,
            m2.name AS name2,
            m2.path AS path2,
            m2.requireAuth AS requireAuth2
        FROM
            menu m1,
            menu m2
        WHERE
            m1.id = m2.parentId
        AND m1.id != 1
        AND m2.id IN (
            SELECT
                mr.menu_id
            FROM
                role_user h_r,
                menu_role mr
            WHERE
                h_r.role_id = mr.role_id
            AND h_r.role_id = #{userid}) and m2.enabled=true order by m1.id,m2.id
    </select>
    <select id="menuTree" resultMap="BaseResultMap">
            select m1.`id`,m1.`name`,m2.`id` as id2,m2.`name` as name2,m3.`id` as id3,m3.`name` as name3 from menu m1,menu m2,menu m3 where m1.`id`=m2.`parentId` and m2.`id`=m3.`parentId` and m3.`enabled`=true
        </select>
    <select id="getMenusByRid" resultType="Long">
        SELECT mid from menu_role WHERE rid=#{rid}
    </select>
</mapper>